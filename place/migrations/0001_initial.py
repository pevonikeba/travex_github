# Generated by Django 4.0.3 on 2022-03-18 13:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('continent', models.CharField(choices=[('asia', 'Asia'), ('africa', 'Africa'), ('europe', 'Europe'), ('north america', 'North America'), ('south america', 'South America'), ('australia/oceania', 'Australia/Oceania'), ('antarctica', 'Antarctica')], default='Asia', max_length=20)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=13, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=13, null=True)),
                ('description', models.TextField(null=True)),
                ('nearest_place', models.TextField(blank=True, null=True)),
                ('population', models.BigIntegerField(blank=True, null=True)),
                ('type_of_people_around', models.CharField(blank=True, choices=[('ambitious and passionate people', 'Ambitious and passionate people'), ('the doers', 'The doers'), ('the problem solvers', 'The problem solvers'), ('those who are on a similar journey as you', 'Those who are on a similar journey as you'), ('those who can inspire you and be your role model', 'Those who can inspire you and be your role model'), ('those who help you tap your full potential and bring out the best in you', 'Those who help you tap your full potential and bring out the best in you'), ('those who can provide a genuine feedback', 'Those who can provide a genuine feedback'), ('those who can help you keep happy, upbeat and positive', 'Those who can help you keep happy, upbeat and positive'), ('the ‘forward moving’ people', 'The ‘forward moving’ people')], max_length=255)),
                ('how_dangerous', models.CharField(blank=True, choices=[('very safe', 'Very Safe'), ('safe', 'Safe'), ('average', 'Average'), ('somewhat dangerous', 'Somewhat Dangerous'), ('dangerous', 'Dangerous')], max_length=255)),
                ('rating_danger', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('climate', models.CharField(blank=True, choices=[('Tropical', 'Tropical'), ('Dry', 'Dry'), ('Mild', 'Mild'), ('Continental', 'Continental'), ('Polar', 'Polar')], max_length=255)),
                ('climate_description', models.TextField(blank=True, null=True)),
                ('tips_for_every_season', models.TextField(blank=True, null=True)),
                ('types_of_ecosystem', models.CharField(blank=True, choices=[('terrestrial ecosystem', 'Terrestrial ecosystem'), ('forest ecosystem', 'Forest ecosystem'), ('grassland ecosystem', 'Grassland ecosystem'), ('desert ecosystem', 'Desert ecosystem'), ('tundra ecosystem', 'Tundra ecosystem'), ('freshwater ecosystem', 'Freshwater ecosystem'), ('marine ecosystem', 'Marine ecosystem')], max_length=255)),
                ('types_of_ecosystem_description', models.TextField(blank=True, null=True)),
                ('tourist_population_per_season_winter', models.BigIntegerField(blank=True, null=True)),
                ('tourist_population_per_season_spring', models.BigIntegerField(blank=True, null=True)),
                ('tourist_population_per_season_summer', models.BigIntegerField(blank=True, null=True)),
                ('tourist_population_per_season_autumn', models.BigIntegerField(blank=True, null=True)),
                ('transport', models.TextField(blank=True, null=True)),
                ('nearest_airport', models.TextField(blank=True, null=True)),
                ('kitchen', models.TextField(blank=True, null=True)),
                ('local_kitchen', models.TextField(blank=True, null=True)),
                ('price_and_average_kitchen', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('currency_buying_advice', models.TextField(blank=True, null=True)),
                ('simcards', models.TextField(blank=True, null=True)),
                ('internet', models.TextField(blank=True, null=True)),
                ('pay_online_or_by_card', models.TextField(blank=True, null=True)),
                ('rating', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
            ],
        ),
        migrations.CreateModel(
            name='WhereToTakeAPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='where_to_take_a_picture', to='place.place')),
            ],
        ),
        migrations.CreateModel(
            name='UniquenessPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uniqueness_place', to='place.place')),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Walking', 'Walking'), ('Biking', 'Biking'), ('Cars', 'Cars'), ('Trains', 'Trains'), ('Buses', 'Buses'), ('Boats', 'Boats'), ('Subways', 'Subways'), ('Aerial Tramways', 'Aerial Tramways'), ('Flying', 'Flying'), ('Funiculars', 'Funiculars')], max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comfortable', models.CharField(choices=[('very comfortable', 'Very Comfortable'), ('comfortable', 'Comfortable'), ('average', 'Average'), ('durable', 'Durable'), ('totally uncomfortable', 'Totally Uncomfortable')], max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='place.place')),
            ],
        ),
        migrations.CreateModel(
            name='MustSee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='must_see', to='place.place')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='place.place')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('places', models.ManyToManyField(blank=True, related_name='places', to='place.place', verbose_name='places')),
            ],
        ),
        migrations.CreateModel(
            name='AccommodationOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accommodationOptions', to='place.place')),
            ],
        ),
    ]
